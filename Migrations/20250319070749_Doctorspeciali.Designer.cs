// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iMARSARLIMS;

#nullable disable

namespace iMARSARLIMS.Migrations
{
    [DbContext(typeof(ContextClass))]
    [Migration("20250319070749_Doctorspeciali")]
    partial class Doctorspeciali
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("iMARSARLIMS.Model.Account.CentrePayment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float?>("advancePaymentAmt")
                        .HasColumnType("float");

                    b.Property<short>("approved")
                        .HasColumnType("smallint");

                    b.Property<int?>("apprvoedByID")
                        .HasColumnType("int");

                    b.Property<string>("bank")
                        .HasColumnType("longtext");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("documentName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("paymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("paymentMode")
                        .HasColumnType("longtext");

                    b.Property<byte?>("paymentType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("rejectRemarks")
                        .HasColumnType("longtext");

                    b.Property<string>("remarks")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("tnxDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tnxNo")
                        .HasColumnType("longtext");

                    b.Property<int?>("updateByID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("CentrePayment");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Account.centreInvoice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("cancelByID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("cancelDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cancelReason")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("centreid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("createdBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("fromDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("invoiceNo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<byte?>("isCancel")
                        .HasColumnType("tinyint unsigned");

                    b.Property<double>("rate")
                        .HasColumnType("double");

                    b.Property<DateTime>("toDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("centreInvoice");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Appointment.RouteMapping", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("pheleboId")
                        .HasColumnType("int");

                    b.Property<int>("routeId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("RouteMapping");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Appointment.appointmentBooking", b =>
                {
                    b.Property<int>("appointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AppointmentScheduledOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("AppointmentType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("AssignedPhlebo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("WorkorderId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("assignedBy")
                        .HasColumnType("int");

                    b.Property<int?>("cancleBy")
                        .HasColumnType("int");

                    b.Property<int>("rescheduleBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("rescheduleDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("transactionId")
                        .HasColumnType("int");

                    b.HasKey("appointmentId");

                    b.HasIndex("transactionId");

                    b.ToTable("appointmentBooking");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Appointment.routeMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("pincode")
                        .HasColumnType("int");

                    b.Property<string>("routeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("routeMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Appointment.timeSlotMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("timeslot")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("timeSlotMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.Allergy_SubType_Master", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("defultReading")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("descrition")
                        .HasColumnType("longtext");

                    b.Property<string>("firstRange")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("imagePath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("secondRange")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("sub_TypeName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("thirdRange")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("typeId")
                        .HasColumnType("int");

                    b.Property<string>("unit")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Allergy_SubType_Master");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.Allergy_TypeMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("allergyType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("Allergy_TypeMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.CentreCertificate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<string>("centreName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("certificateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("CentreCertificate");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.DoctorApprovalSign", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("DoctorSign")
                        .HasColumnType("longtext");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("empid")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("DoctorApprovalSign");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.DoctorSpecialization", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("specialization")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("DoctorSpecialization");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.InvestigationMasterUD", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("formatUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("investigationId")
                        .HasColumnType("int");

                    b.Property<string>("investigationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("InvestigationMasterUD");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.ItemObservationMapping", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte?>("dlcCheck")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("formula")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isBold")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isCritical")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isHeader")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isPackage")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isProfile")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isTest")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("itemId")
                        .HasColumnType("int");

                    b.Property<short>("itemType")
                        .HasColumnType("smallint");

                    b.Property<int?>("observationID")
                        .HasColumnType("int");

                    b.Property<int?>("printOrder")
                        .HasColumnType("int");

                    b.Property<byte?>("printSeparate")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("showInReport")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("ItemObservationMapping");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.LabRemarkMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("remark")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("LabRemarkMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.LegendColorMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ColourName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("colourCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("contantName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("LegendColorMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.MarketingDashBoard", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pdf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("MarketingDashBoard");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.ReportEmail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Header")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("emailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("isAutoSend")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isSend")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("remarks")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("sendDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("sentBy")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("workOrderId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("id");

                    b.ToTable("ReportEmail");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.RolePageAccess", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("parentmenuid")
                        .HasColumnType("int");

                    b.Property<int>("roleid")
                        .HasColumnType("int");

                    b.Property<int>("submenuId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("RolePageAccess");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.SampleRerunReason", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("SampleRerunReason");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.SampleremarkMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("remark")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("SampleremarkMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.TestMethodMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("method")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("TestMethodMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.Testing", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<int>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("isactive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("titleId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Testing");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.ThemeColour", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("blockColor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("headerColor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("iconColor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("isdefault")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("menuColor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.Property<string>("subMenuColor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("textColor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("id");

                    b.ToTable("ThemeColour");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.area_master", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("areaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("cityId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("area_master");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.bank_master", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("bank_master");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.barcode_series", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("barcodeNo")
                        .HasColumnType("int");

                    b.Property<string>("suffix")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.HasKey("id");

                    b.ToTable("barcode_series");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.centerAccess", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("centreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("empId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("centerAccess");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.centerTypeMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("centerTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("centerTypeMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.centreBillingType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("billingTypeName")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("isActive")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("centreBillingType");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.centreLedgerRemarks", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("centreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("centreLedgerRemarks");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.centreMaster", b =>
                {
                    b.Property<int>("centreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aggreement")
                        .HasColumnType("longtext");

                    b.Property<string>("CertificateImage")
                        .HasColumnType("longtext");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IFSCCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("LockDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("NABLxPosition")
                        .HasColumnType("int");

                    b.Property<int?>("NABLyPosition")
                        .HasColumnType("int");

                    b.Property<string>("NablImage")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("PAN")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("QRCodeXPosition")
                        .HasColumnType("int");

                    b.Property<int?>("QRCodeYPosition")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.Property<int>("ac")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("adharNo")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<int>("allowDueReport")
                        .HasColumnType("int");

                    b.Property<string>("bankAccount")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("bankID")
                        .HasColumnType("int");

                    b.Property<string>("bankName")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("barcodeXPosition")
                        .HasColumnType("int");

                    b.Property<int?>("barcodeYPosition")
                        .HasColumnType("int");

                    b.Property<int?>("billingType")
                        .HasColumnType("int");

                    b.Property<string>("billingTypeName")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("bookingLock")
                        .HasColumnType("int");

                    b.Property<string>("centrecode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("centretype")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("centretypeid")
                        .HasColumnType("int");

                    b.Property<int>("chequeAmount")
                        .HasColumnType("int");

                    b.Property<string>("chequeNo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("cityId")
                        .HasColumnType("int");

                    b.Property<int>("clientRate")
                        .HasColumnType("int");

                    b.Property<int>("clientmrp")
                        .HasColumnType("int");

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("creditLimt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("creditPeridos")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("docSignYPosition")
                        .HasColumnType("int");

                    b.Property<int>("documentType")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<int?>("footerHeight")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("isBarcodeHeader")
                        .HasColumnType("int");

                    b.Property<int?>("isDefault")
                        .HasColumnType("int");

                    b.Property<int?>("isLab")
                        .HasColumnType("int");

                    b.Property<int>("isLock")
                        .HasColumnType("int");

                    b.Property<int>("isPrePrintedBarcode")
                        .HasColumnType("int");

                    b.Property<int?>("isQRheader")
                        .HasColumnType("int");

                    b.Property<int?>("lockedBy")
                        .HasColumnType("int");

                    b.Property<int>("minBookingAmt")
                        .HasColumnType("int");

                    b.Property<string>("mobileNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ownerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("parentCentreID")
                        .HasColumnType("int");

                    b.Property<int>("patientRate")
                        .HasColumnType("int");

                    b.Property<int?>("patientYHeader")
                        .HasColumnType("int");

                    b.Property<string>("paymentMode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("paymentModeId")
                        .HasColumnType("int");

                    b.Property<int>("pinCode")
                        .HasColumnType("int");

                    b.Property<int>("proId")
                        .HasColumnType("int");

                    b.Property<int>("processingLab")
                        .HasColumnType("int");

                    b.Property<int?>("receiptHeaderY")
                        .HasColumnType("int");

                    b.Property<int>("receptionarea")
                        .HasColumnType("int");

                    b.Property<string>("reciptFooter")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("reciptHeader")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("reporrtHeaderHeightY")
                        .HasColumnType("int");

                    b.Property<string>("reportBackImage")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("reportEmail")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("reportHeader")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("reportLock")
                        .HasColumnType("int");

                    b.Property<int>("salesExecutiveID")
                        .HasColumnType("int");

                    b.Property<int>("showBackcover")
                        .HasColumnType("int");

                    b.Property<int>("showClientCode")
                        .HasColumnType("int");

                    b.Property<int>("showISO")
                        .HasColumnType("int");

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.Property<string>("unlockBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("unlockDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("unlockTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("waitingarea")
                        .HasColumnType("int");

                    b.Property<string>("waterMarkImage")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("watercooler")
                        .HasColumnType("int");

                    b.HasKey("centreId");

                    b.ToTable("centreMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.centreWelcomeEmail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("centreCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("centreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("createdByID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("emailBody")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("emailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("errorMsg")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<byte?>("isSent")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("sendDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id");

                    b.ToTable("centreWelcomeEmail");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.changeCentreLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("dtEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("enteredBy")
                        .HasColumnType("int");

                    b.Property<int?>("newBookingCentre")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("newCompanyId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("newRateTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("oldBookingCentre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int?>("oldCompanyId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("oldRateTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("workOrderId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("changeCentreLog");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.chatGroupMaster", b =>
                {
                    b.Property<int>("groupMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("groupMasterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.HasKey("groupMasterId");

                    b.ToTable("chatGroupMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.chatGroupMasterEmployee", b =>
                {
                    b.Property<int>("groupMasterEmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<int>("empId")
                        .HasColumnType("int");

                    b.Property<int>("groupMasterId")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.HasKey("groupMasterEmployeeId");

                    b.HasIndex("empId");

                    b.HasIndex("groupMasterId");

                    b.ToTable("chatGroupMasterEmployee");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.chatMessage", b =>
                {
                    b.Property<int>("messageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<int?>("empId")
                        .HasColumnType("int");

                    b.Property<string>("fileName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("fileUrl")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("groupMasterId")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("isSeen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.HasKey("messageId");

                    b.HasIndex("empId");

                    b.HasIndex("groupMasterId");

                    b.ToTable("chatMessage");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.cityMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("districtid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("cityMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.containerColorMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("colorName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("containerColorMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.degreeMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("degreeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("degreeMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.designationMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("designationName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("designationMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.discountReasonMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("discountReasonName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("discountReasonMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.discountTypeMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("discountTypeMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.districtMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("stateId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("districtMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.doctorApprovalDepartments", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("departmentId")
                        .HasColumnType("int");

                    b.Property<int>("doctorId")
                        .HasColumnType("int");

                    b.Property<int>("empId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("fromTime")
                        .HasColumnType("time(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<TimeSpan?>("toTime")
                        .HasColumnType("time(6)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("doctorApprovalDepartments");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.doctorApprovalMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("approve")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("doctorId")
                        .HasColumnType("int");

                    b.Property<string>("doctorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("empId")
                        .HasColumnType("int");

                    b.Property<string>("empName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("hold")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("isSign")
                        .HasColumnType("int");

                    b.Property<byte>("notApprove")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("signature")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("unHold")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("doctorApprovalMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.doctorReferalMaster", b =>
                {
                    b.Property<int>("doctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("address2")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte?>("allowsharing")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("anniversary")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("areaId")
                        .HasColumnType("int");

                    b.Property<int>("centreID")
                        .HasColumnType("int");

                    b.Property<int?>("city")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("degreeId")
                        .HasColumnType("int");

                    b.Property<string>("degreeName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("dob")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("doctorCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("doctorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("imaRegistartionNo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("mobileNo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("mobileno2")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("pinCode")
                        .HasColumnType("int");

                    b.Property<int?>("proId")
                        .HasColumnType("int");

                    b.Property<byte?>("referMasterShare")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("reportEmail")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("specialization")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("specializationID")
                        .HasColumnType("int");

                    b.Property<int?>("state")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("doctorId");

                    b.ToTable("doctorReferalMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.doctorShareMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<int>("Centreid")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBYID")
                        .HasColumnType("int");

                    b.Property<int>("Doctorid")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<byte[]>("createdDate")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("createdbyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("deptid")
                        .HasColumnType("int");

                    b.Property<double>("percentage")
                        .HasColumnType("double");

                    b.Property<byte>("type")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("id");

                    b.ToTable("doctorShareMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.documentMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("documentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("fileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("transactionId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("documentMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.documentTypeMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("documentType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("documentTypeMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.empCenterAccess", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("empId")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("centreId");

                    b.HasIndex("empId");

                    b.ToTable("empCenterAccess");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.empDepartmentAccess", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("departmentId")
                        .HasColumnType("int");

                    b.Property<int>("empId")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("empId");

                    b.ToTable("empDepartmentAccess");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.empLoginDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("browserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("creadteddate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("empId")
                        .HasColumnType("int");

                    b.Property<string>("empName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("hostName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ipAddress")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("logindatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("logoutdatetime")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("macAddress")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("roleId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.ToTable("empLoginDetails");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.empMaster", b =>
                {
                    b.Property<int>("empId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte?>("IndentApprove")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("adminPassword")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<byte>("allowDueReport")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("area")
                        .HasColumnType("int");

                    b.Property<byte>("autoCreated")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("bloodGroup")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int>("city")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("defaultcentre")
                        .HasColumnType("int");

                    b.Property<int>("defaultrole")
                        .HasColumnType("int");

                    b.Property<int>("designationId")
                        .HasColumnType("int");

                    b.Property<int?>("district")
                        .HasColumnType("int");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("empCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("employeeType")
                        .HasColumnType("int");

                    b.Property<string>("fName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("fromIP")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<byte?>("indentIssue")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("isDiscountAppRights")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("isPwdchange")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("isSalesTeamMember")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("isdeviceAuthentication")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("isemailotp")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("lName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("mobileNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("pinCode")
                        .HasColumnType("int");

                    b.Property<int?>("pro")
                        .HasColumnType("int");

                    b.Property<string>("qualification")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("rate")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.Property<string>("tempPassword")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("toIP")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("zone")
                        .HasColumnType("int");

                    b.HasKey("empId");

                    b.ToTable("empMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.empRoleAccess", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("empId")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("empId");

                    b.ToTable("empRoleAccess");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.formulaMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FormulaText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("formula")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<int>("observationId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("formulaMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.helpMenuMapping", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ObservationId")
                        .HasColumnType("int");

                    b.Property<int?>("helpId")
                        .HasColumnType("int");

                    b.Property<int>("isActive")
                        .HasColumnType("int");

                    b.Property<int?>("itemId")
                        .HasColumnType("int");

                    b.Property<int>("mappedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("mappedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("removedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("removedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("helpMenuMapping");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.helpMenuMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("helpName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.ToTable("helpMenuMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.idMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("centreId")
                        .HasColumnType("int");

                    b.Property<string>("fYear")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<int?>("maxID")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("typeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("idMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.itemCommentMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("itemId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("observationId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("template")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("templateName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("itemCommentMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.itemDocumentMapping", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("documentId")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("itemId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("itemDocumentMapping");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.itemInterpretation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("interpretation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<int>("showInReport")
                        .HasColumnType("int");

                    b.Property<int>("showinPackages")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("itemInterpretation");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.itemInterpretationLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("centreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("interpatationid")
                        .HasColumnType("int");

                    b.Property<string>("interpretation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("itemId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("showInReport")
                        .HasColumnType("int");

                    b.Property<int>("showinPackages")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("itemInterpretationLog");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.itemMaster", b =>
                {
                    b.Property<int>("itemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("agegroup")
                        .HasColumnType("int");

                    b.Property<byte>("allowDiscont")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("allowReporting")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("allowShare")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("autosaveautoapprove")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("consentForm")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("containerColor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte?>("culturereport")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("defaultsampletype")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("deptId")
                        .HasColumnType("int");

                    b.Property<string>("dispalyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("displaySequence")
                        .HasColumnType("int");

                    b.Property<string>("gender")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isAllergyTest")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isOutsource")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isSpecialItem")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("ismic")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isorganism")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("itemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("itemType")
                        .HasColumnType("int");

                    b.Property<byte?>("lmpRequire")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("printsamplename")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("printseperate")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("reportType")
                        .HasColumnType("int");

                    b.Property<string>("sampleVolume")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("samplelogisticstemp")
                        .HasColumnType("longtext");

                    b.Property<byte?>("showinonlinereport")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("showinpatientreport")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("sortName")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("testMethod")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("testRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("itemId");

                    b.ToTable("itemMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.itemObservationMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte?>("collectionRequire")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("displaySequence")
                        .HasColumnType("int");

                    b.Property<byte?>("dlcCheck")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("formula")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("gender")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("labObservationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("method")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("observationWiseInterpretation")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<byte?>("printSeparate")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("resultRequired")
                        .HasColumnType("tinyint unsigned");

                    b.Property<double?>("roundUp")
                        .HasColumnType("double");

                    b.Property<string>("shortName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("suffix")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("itemObservationMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.itemObservation_isnabl", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IsDefaultLogo")
                        .HasColumnType("int");

                    b.Property<string>("NablLogo")
                        .HasColumnType("longtext");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("itemid")
                        .HasColumnType("int");

                    b.Property<int>("observationId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("itemObservation_isnabl");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.itemRateMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("itemCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<int?>("rateTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("itemRateMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.itemSampleTypeMapping", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isDefault")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<int>("sampleTypeId")
                        .HasColumnType("int");

                    b.Property<string>("sampleTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("itemId");

                    b.ToTable("itemSampleTypeMapping");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.itemTemplate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CentreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Template")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("itemTemplate");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.item_OutHouseMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProcessingLabId")
                        .HasColumnType("int");

                    b.Property<int>("bookingCentreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("departmentId")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("item_OutHouseMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.item_outsourcemaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LabId")
                        .HasColumnType("int");

                    b.Property<int>("bookingCentreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("departmentId")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("item_outsourcemaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.labDepartment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("abbreviation")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("deptCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("deptName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("printSequence")
                        .HasColumnType("int");

                    b.Property<string>("subDeptName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("labDepartment");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.labReportFooterText", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("footerText")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("labReportFooterText");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.labReportHeader", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("headerCSS")
                        .HasColumnType("longtext");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("labReportHeader");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.logoDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("imageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("logoDescription")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("logoType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("remarks")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("logoDetails");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.machineMaster", b =>
                {
                    b.Property<short>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<int>("boundRate")
                        .HasColumnType("int");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<string>("comPort")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("dataBit")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("machineIP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("machineName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("machinePortNo")
                        .HasColumnType("int");

                    b.Property<string>("machineType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("parity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("referRange")
                        .HasColumnType("int");

                    b.Property<int>("stopBit")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("machineMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.machineObservationMapping", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("assay")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("formula")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isOrderable")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("labTestID")
                        .HasColumnType("int");

                    b.Property<short>("machineId")
                        .HasColumnType("smallint");

                    b.Property<double?>("multiplication")
                        .HasColumnType("double");

                    b.Property<byte?>("roundUp")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("suffix")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("machineObservationMapping");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.machine_result", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("MacReading2")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("MacReading3")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("barcodeNo")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("dob")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("gender")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("investigationName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("labCentreId")
                        .HasColumnType("int");

                    b.Property<string>("labObservationName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte?>("macId1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("macId2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("macId3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("macReading1")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("machineComments")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("machineName1")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("machineName2")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("machineName3")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("observationId")
                        .HasColumnType("int");

                    b.Property<string>("patientName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("status")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("testId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("workOrderId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.ToTable("machine_result");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.menuIconMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("id");

                    b.ToTable("menuIconMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.menuMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MenuType")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("displaySequence")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("isHide")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("menuName")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("navigationUrl")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("parentId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("menuMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.observationComment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("observationId")
                        .HasColumnType("int");

                    b.Property<int>("testId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("observationComment");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.observationReferenceRanges", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("defaultValue")
                        .HasColumnType("longtext");

                    b.Property<int?>("fromAge")
                        .HasColumnType("int");

                    b.Property<string>("gender")
                        .HasColumnType("longtext");

                    b.Property<string>("genderTextValue")
                        .HasColumnType("longtext");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("machineID")
                        .HasColumnType("int");

                    b.Property<double?>("maxAutoApprovalValue")
                        .HasColumnType("double");

                    b.Property<double?>("maxCritical")
                        .HasColumnType("double");

                    b.Property<double?>("maxValue")
                        .HasColumnType("double");

                    b.Property<double?>("minAutoApprovalValue")
                        .HasColumnType("double");

                    b.Property<double?>("minCritical")
                        .HasColumnType("double");

                    b.Property<double?>("minValue")
                        .HasColumnType("double");

                    b.Property<int?>("observationId")
                        .HasColumnType("int");

                    b.Property<string>("reportReading")
                        .HasColumnType("longtext");

                    b.Property<int?>("toAge")
                        .HasColumnType("int");

                    b.Property<string>("unit")
                        .HasColumnType("longtext");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("observationReferenceRanges");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.organismAntibioticMaster", b =>
                {
                    b.Property<short>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("machineCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("microType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("organismAntibiotic")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("organismAntibioticMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.organismAntibioticTagMaster", b =>
                {
                    b.Property<short>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<int>("antibiticId")
                        .HasColumnType("int");

                    b.Property<int?>("centreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("organismId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("organismAntibioticTagMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.outSourcelabmaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("labName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("outSourcelabmaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.patientDemographicLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RefDoctor1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ageDays")
                        .HasColumnType("int");

                    b.Property<int>("ageMonth")
                        .HasColumnType("int");

                    b.Property<int>("ageTotal")
                        .HasColumnType("int");

                    b.Property<int>("ageYear")
                        .HasColumnType("int");

                    b.Property<int?>("centreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("mobileNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("patientId")
                        .HasColumnType("int");

                    b.Property<string>("patientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("refDoctor2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("refID1")
                        .HasColumnType("int");

                    b.Property<int>("refID2")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("transactionId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("patientDemographicLog");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.patientReportEmail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("deliveryDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("emailCC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("emailSentTo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("isAutoSend")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isSend")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("remarks")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("sendDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("sentBy")
                        .HasColumnType("int");

                    b.Property<string>("testId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("transactionId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("workOrderId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("id");

                    b.ToTable("patientReportEmail");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.rateTypeMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("rateName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("rateType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("rateTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("rateTypeMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.rateTypeTagging", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("rateTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("rateTypeTagging");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.rateTypeWiseRateList", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("deptId")
                        .HasColumnType("int");

                    b.Property<double>("discount")
                        .HasColumnType("double");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("itemCode")
                        .HasColumnType("longtext");

                    b.Property<int>("itemid")
                        .HasColumnType("int");

                    b.Property<double>("mrp")
                        .HasColumnType("double");

                    b.Property<double>("rate")
                        .HasColumnType("double");

                    b.Property<int>("rateTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("transferDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("transferRemarks")
                        .HasColumnType("longtext");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("rateTypeWiseRateList");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.roleMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("isSalesRole")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("roleMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.roleMenuAccess", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int?>("employeeId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("menuId")
                        .HasColumnType("int");

                    b.Property<int?>("roleId")
                        .HasColumnType("int");

                    b.Property<int?>("subMenuId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("roleMenuAccess");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.sampleRejectionReason", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("rejectionReason")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("sampleRejectionReason");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.sampletype_master", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("sampleTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("sampletype_master");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.sms", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte?>("isAutoSend")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isSend")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("mobileNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("remarks")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("sendDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("sentBy")
                        .HasColumnType("int");

                    b.Property<string>("smsText")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("templateId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("transactionId")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("workOrderId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("id");

                    b.ToTable("sms");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.stateMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("zoneId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("stateMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.tat_master", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<int?>("Days")
                        .HasColumnType("int");

                    b.Property<int>("Deptid")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time(6)");

                    b.Property<int?>("Fri")
                        .HasColumnType("int");

                    b.Property<int?>("Mins")
                        .HasColumnType("int");

                    b.Property<int?>("Mon")
                        .HasColumnType("int");

                    b.Property<int?>("Regcoll")
                        .HasColumnType("int");

                    b.Property<int?>("Sat")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time(6)");

                    b.Property<int?>("Sun")
                        .HasColumnType("int");

                    b.Property<string>("TATType")
                        .HasColumnType("longtext");

                    b.Property<int?>("Thu")
                        .HasColumnType("int");

                    b.Property<int?>("Tue")
                        .HasColumnType("int");

                    b.Property<int?>("Wed")
                        .HasColumnType("int");

                    b.Property<int>("centreid")
                        .HasColumnType("int");

                    b.Property<int?>("collrecv")
                        .HasColumnType("int");

                    b.Property<int>("itemid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tat_master");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.titleMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("titleMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.whatsapp", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Header")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte?>("isAutoSend")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isSend")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("mobileNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("remarks")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("sendDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("sentBy")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("workOrderId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("id");

                    b.ToTable("whatsapp");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.zoneMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("zone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.ToTable("zoneMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Store.Indent", b =>
                {
                    b.Property<int>("indentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApproveDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CentreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RejectDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("approveByid")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("indentBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("indentById")
                        .HasColumnType("int");

                    b.Property<int>("indentStatus")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("isrejected")
                        .HasColumnType("int");

                    b.Property<int?>("rejectedBy")
                        .HasColumnType("int");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("indentId");

                    b.ToTable("Indent");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Store.ItemMasterStore", b =>
                {
                    b.Property<int>("itemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("itemName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("itemId");

                    b.ToTable("ItemMasterStore");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Store.indentDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApprovedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("indentId")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<string>("itemName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("indentId");

                    b.ToTable("indentDetail");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Store.indentIssueDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IssueById")
                        .HasColumnType("int");

                    b.Property<DateTime>("IssueDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IssuedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("indentId")
                        .HasColumnType("int");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<int>("requestedQuantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("indentIssueDetail");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.machineRerunTestDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("InvestigationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LabObservationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("MacID")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("MacReading")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("RerunDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RerunReason")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Rerunbyid")
                        .HasColumnType("int");

                    b.Property<int>("observationId")
                        .HasColumnType("int");

                    b.Property<int>("testID")
                        .HasColumnType("int");

                    b.Property<string>("workorderid")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("id");

                    b.ToTable("machineRerunTestDetail");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_Allergy_ResultEntry", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("allergySubType")
                        .HasColumnType("int");

                    b.Property<string>("allergySubTypeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("allergyType")
                        .HasColumnType("int");

                    b.Property<string>("allergyTypeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("bookingItemId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("displayReading")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("firstRange")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<double>("max")
                        .HasColumnType("double");

                    b.Property<double>("min")
                        .HasColumnType("double");

                    b.Property<string>("reading")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("secondRange")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("test_id")
                        .HasColumnType("int");

                    b.Property<string>("thirdRange")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("transactionId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("tnx_Allergy_ResultEntry");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_Booking", b =>
                {
                    b.Property<int>("transactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("OtherLabReferID")
                        .HasColumnType("int");

                    b.Property<string>("RefDoctor1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ageDay")
                        .HasColumnType("int");

                    b.Property<int>("ageMonth")
                        .HasColumnType("int");

                    b.Property<int>("ageYear")
                        .HasColumnType("int");

                    b.Property<int>("billNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("bookingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<string>("clientCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("discount")
                        .HasColumnType("double");

                    b.Property<int>("discountApproved")
                        .HasColumnType("int");

                    b.Property<string>("discountReason")
                        .HasColumnType("longtext");

                    b.Property<int>("discountType")
                        .HasColumnType("int");

                    b.Property<int?>("discountid")
                        .HasColumnType("int");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<double>("grossAmount")
                        .HasColumnType("double");

                    b.Property<string>("invoiceNo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("isAppointment")
                        .HasColumnType("int");

                    b.Property<byte>("isCredit")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("isDisCountApproved")
                        .HasColumnType("int");

                    b.Property<string>("labRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("mobileNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<double>("mrp")
                        .HasColumnType("double");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("netAmount")
                        .HasColumnType("double");

                    b.Property<string>("otherLabRefer")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("paidAmount")
                        .HasColumnType("double");

                    b.Property<int>("patientId")
                        .HasColumnType("int");

                    b.Property<string>("patientRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("paymentMode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("rateId")
                        .HasColumnType("int");

                    b.Property<string>("refDoctor2")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("refID1")
                        .HasColumnType("int");

                    b.Property<int?>("refID2")
                        .HasColumnType("int");

                    b.Property<int?>("salesExecutiveID")
                        .HasColumnType("int");

                    b.Property<int>("sessionCentreid")
                        .HasColumnType("int");

                    b.Property<string>("source")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("tempDOCID")
                        .HasColumnType("int");

                    b.Property<string>("tempDoctroName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("title_id")
                        .HasColumnType("int");

                    b.Property<int>("totalAge")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("uploadDocument")
                        .HasColumnType("longtext");

                    b.Property<string>("workOrderId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("transactionId");

                    b.HasIndex("patientId");

                    b.ToTable("tnx_Booking");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_BookingItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("DoctorSignId")
                        .HasColumnType("int");

                    b.Property<int>("Isprint")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RefundDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RejectedReason")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UnholdById")
                        .HasColumnType("int");

                    b.Property<int?>("approvalDoctor")
                        .HasColumnType("int");

                    b.Property<int?>("approvedByID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("approvedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("approvedbyName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("barcodeNo")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("deliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("departmentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("departmentReceiveBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("departmentReceiveByID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("departmentReceiveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("departmentReceiveRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("deptId")
                        .HasColumnType("int");

                    b.Property<double>("discount")
                        .HasColumnType("double");

                    b.Property<int?>("hold")
                        .HasColumnType("int");

                    b.Property<int?>("holdById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("holdDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("holdReason")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("interpretationId")
                        .HasColumnType("int");

                    b.Property<string>("investigationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("invoiceAmount")
                        .HasColumnType("double");

                    b.Property<int?>("invoiceCreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("invoiceCycle")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("invoiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("invoiceNo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("invoiceNoOld")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("invoiceNumber")
                        .HasColumnType("int");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isApproved")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isCritical")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("isEmailsent")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isInvoiceCreated")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("isMachineOrder")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isOuthouse")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("isPackage")
                        .HasColumnType("int");

                    b.Property<byte>("isRemoveItem")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isReporting")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isResultDone")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("isSampleCollected")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<byte>("isSra")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("isUrgent")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("isWhatsApp")
                        .HasColumnType("int");

                    b.Property<byte?>("isrerun")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<int>("itemType")
                        .HasColumnType("int");

                    b.Property<string>("labName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("mrp")
                        .HasColumnType("double");

                    b.Property<double>("netAmount")
                        .HasColumnType("double");

                    b.Property<string>("notApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("notApprovedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("outhouseDoneBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("outhouseDoneOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("outhouseLab")
                        .HasColumnType("int");

                    b.Property<double>("packItemDiscount")
                        .HasColumnType("double");

                    b.Property<double>("packItemNet")
                        .HasColumnType("double");

                    b.Property<double>("packItemRate")
                        .HasColumnType("double");

                    b.Property<double>("packMrp")
                        .HasColumnType("double");

                    b.Property<int>("packageID")
                        .HasColumnType("int");

                    b.Property<string>("packageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("rate")
                        .HasColumnType("double");

                    b.Property<int?>("refundBy")
                        .HasColumnType("int");

                    b.Property<string>("refundReason")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("remarks")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("reportType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("resultDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("resultDoneByID")
                        .HasColumnType("int");

                    b.Property<string>("resutDoneBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("sampleCollectedID")
                        .HasColumnType("int");

                    b.Property<string>("sampleCollectedby")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("sampleCollectionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("sampleReceiveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("sampleReceivedBY")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("sampleRecollectedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("sampleRecollectedby")
                        .HasColumnType("int");

                    b.Property<int?>("sampleRejectionBy")
                        .HasColumnType("int");

                    b.Property<string>("sampleRejectionByName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("sampleRejectionOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("sampleTypeId")
                        .HasColumnType("int");

                    b.Property<string>("sampleTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("samplecollectionremarks")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("sessionCentreid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("showonReportdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("testcode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("transactionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("unHoldDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("workOrderId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.HasIndex("transactionId");

                    b.ToTable("tnx_BookingItem");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_BookingPatient", b =>
                {
                    b.Property<int>("patientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ageDays")
                        .HasColumnType("int");

                    b.Property<int?>("ageMonth")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("ageTotal")
                        .HasColumnType("int");

                    b.Property<short>("ageYear")
                        .HasColumnType("smallint");

                    b.Property<int>("areaId")
                        .HasColumnType("int");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int>("cityId")
                        .HasColumnType("int");

                    b.Property<int>("countryId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("districtId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("documentId")
                        .HasColumnType("int");

                    b.Property<string>("documnetnumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("emailId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isActualDOB")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("mobileNo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("password")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("pinCode")
                        .HasColumnType("int");

                    b.Property<string>("remarks")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("stateId")
                        .HasColumnType("int");

                    b.Property<int>("title_id")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("visitCount")
                        .HasColumnType("int");

                    b.HasKey("patientId");

                    b.ToTable("tnx_BookingPatient");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_BookingStatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("barcodeNo")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("patientId")
                        .HasColumnType("int");

                    b.Property<string>("remarks")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("testId")
                        .HasColumnType("int");

                    b.Property<int>("transactionId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("transactionId");

                    b.ToTable("tnx_BookingStatus");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_InvestigationAddReport", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("testId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("tnx_InvestigationAddReport");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_InvestigationAttchment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("testId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("tnx_InvestigationAttchment");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_InvestigationRemarks", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("WorkOrderId")
                        .HasColumnType("longtext");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("invRemarks")
                        .HasColumnType("longtext");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isInternal")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("itemId")
                        .HasColumnType("int");

                    b.Property<string>("itemName")
                        .HasColumnType("longtext");

                    b.Property<int?>("transactionId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("tnx_InvestigationRemarks");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_Invoice_Payment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("cancelById")
                        .HasColumnType("int");

                    b.Property<string>("cancelByName")
                        .HasColumnType("longtext");

                    b.Property<string>("cancelReason")
                        .HasColumnType("longtext");

                    b.Property<int?>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("createdOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("fromDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("invoiceNo")
                        .HasColumnType("longtext");

                    b.Property<byte?>("isCancel")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("toDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("tnx_Invoice_Payment");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_Observations", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("displayReading")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("flag")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isBold")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isCritical")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("isHeader")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("labObservationId")
                        .HasColumnType("int");

                    b.Property<byte?>("machineID")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("machineName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("machineReading")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("max")
                        .HasColumnType("double");

                    b.Property<double?>("maxCritical")
                        .HasColumnType("double");

                    b.Property<double?>("min")
                        .HasColumnType("double");

                    b.Property<double?>("minCritical")
                        .HasColumnType("double");

                    b.Property<string>("observationName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte?>("printseperate")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("readingformat")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("showInReport")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("testId")
                        .HasColumnType("int");

                    b.Property<string>("testMethod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("unit")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("value")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.ToTable("tnx_Observations");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_Observations_Histo", b =>
                {
                    b.Property<int>("histoObservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("biospyNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("blockKeys")
                        .HasColumnType("longtext");

                    b.Property<string>("clinicalHistory")
                        .HasColumnType("longtext");

                    b.Property<string>("comment")
                        .HasColumnType("longtext");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dtEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("finalImpression")
                        .HasColumnType("longtext");

                    b.Property<string>("gross")
                        .HasColumnType("longtext");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("microscopy")
                        .HasColumnType("longtext");

                    b.Property<string>("specimen")
                        .HasColumnType("longtext");

                    b.Property<string>("stainsPerformed")
                        .HasColumnType("longtext");

                    b.Property<int?>("testId")
                        .HasColumnType("int");

                    b.Property<string>("typesFixativeUsed")
                        .HasColumnType("longtext");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("histoObservationId");

                    b.ToTable("tnx_Observations_Histo");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_Observations_Histo_Log", b =>
                {
                    b.Property<int>("histoObservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("biospyNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("blockKeys")
                        .HasColumnType("longtext");

                    b.Property<string>("clinicalHistory")
                        .HasColumnType("longtext");

                    b.Property<string>("comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("dtEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("finalImpression")
                        .HasColumnType("longtext");

                    b.Property<string>("gross")
                        .HasColumnType("longtext");

                    b.Property<string>("microscopy")
                        .HasColumnType("longtext");

                    b.Property<string>("specimen")
                        .HasColumnType("longtext");

                    b.Property<string>("stainsPerformed")
                        .HasColumnType("longtext");

                    b.Property<int?>("testId")
                        .HasColumnType("int");

                    b.Property<string>("typesFixativeUsed")
                        .HasColumnType("longtext");

                    b.HasKey("histoObservationId");

                    b.ToTable("tnx_Observations_Histo_Log");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_Observations_Log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("displayReading")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("dtEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("flag")
                        .HasColumnType("longtext");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isBold")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isCritical")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("labObservationId")
                        .HasColumnType("int");

                    b.Property<byte?>("machineID")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("machineName")
                        .HasColumnType("longtext");

                    b.Property<string>("machineReading")
                        .HasColumnType("longtext");

                    b.Property<double?>("max")
                        .HasColumnType("double");

                    b.Property<double?>("maxCritical")
                        .HasColumnType("double");

                    b.Property<double?>("min")
                        .HasColumnType("double");

                    b.Property<double?>("minCritical")
                        .HasColumnType("double");

                    b.Property<string>("observationName")
                        .HasColumnType("longtext");

                    b.Property<byte?>("printseperate")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("readingformat")
                        .HasColumnType("longtext");

                    b.Property<int?>("testId")
                        .HasColumnType("int");

                    b.Property<string>("testMethod")
                        .HasColumnType("longtext");

                    b.Property<string>("unit")
                        .HasColumnType("longtext");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("value")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("tnx_Observations_Log");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_Observations_Micro_Flowcyto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("antibitiName")
                        .HasColumnType("longtext");

                    b.Property<short>("antibiticId")
                        .HasColumnType("smallint");

                    b.Property<int?>("approvedBy")
                        .HasColumnType("int");

                    b.Property<string>("approvedName")
                        .HasColumnType("longtext");

                    b.Property<string>("colonyCount")
                        .HasColumnType("longtext");

                    b.Property<string>("comments")
                        .HasColumnType("longtext");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("flag")
                        .HasColumnType("longtext");

                    b.Property<string>("intensity")
                        .HasColumnType("longtext");

                    b.Property<string>("interpretation")
                        .HasColumnType("longtext");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isBold")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("labTestId")
                        .HasColumnType("int");

                    b.Property<short>("machineID")
                        .HasColumnType("smallint");

                    b.Property<string>("mic")
                        .HasColumnType("longtext");

                    b.Property<string>("observationName")
                        .HasColumnType("longtext");

                    b.Property<short>("organismId")
                        .HasColumnType("smallint");

                    b.Property<string>("organismName")
                        .HasColumnType("longtext");

                    b.Property<string>("positivity")
                        .HasColumnType("longtext");

                    b.Property<byte?>("reportStatus")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("reportType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("result")
                        .HasColumnType("longtext");

                    b.Property<int>("testId")
                        .HasColumnType("int");

                    b.Property<int?>("transactionId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("tnx_Observations_Micro_Flowcyto");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_Observations_Micro_flowcyto_Log", b =>
                {
                    b.Property<int>("testId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("antibitiName")
                        .HasColumnType("longtext");

                    b.Property<short>("antibiticId")
                        .HasColumnType("smallint");

                    b.Property<int?>("approvedBy")
                        .HasColumnType("int");

                    b.Property<string>("approvedName")
                        .HasColumnType("longtext");

                    b.Property<string>("colonyCount")
                        .HasColumnType("longtext");

                    b.Property<string>("comments")
                        .HasColumnType("longtext");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("flag")
                        .HasColumnType("longtext");

                    b.Property<string>("intensity")
                        .HasColumnType("longtext");

                    b.Property<string>("interpretation")
                        .HasColumnType("longtext");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("isBold")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("labTestId")
                        .HasColumnType("int");

                    b.Property<short>("machineID")
                        .HasColumnType("smallint");

                    b.Property<string>("mic")
                        .HasColumnType("longtext");

                    b.Property<string>("observationName")
                        .HasColumnType("longtext");

                    b.Property<short>("organismId")
                        .HasColumnType("smallint");

                    b.Property<string>("organismName")
                        .HasColumnType("longtext");

                    b.Property<string>("positivity")
                        .HasColumnType("longtext");

                    b.Property<byte?>("reportStatus")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("reportType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("result")
                        .HasColumnType("longtext");

                    b.Property<int?>("transactionId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("testId");

                    b.ToTable("tnx_Observations_Micro_flowcyto_Log");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_OutsourceDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("bookingRate")
                        .HasColumnType("double");

                    b.Property<int?>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("itemId")
                        .HasColumnType("int");

                    b.Property<string>("itemName")
                        .HasColumnType("longtext");

                    b.Property<int?>("outSourceLabID")
                        .HasColumnType("int");

                    b.Property<string>("outSourceLabName")
                        .HasColumnType("longtext");

                    b.Property<double?>("outSourceRate")
                        .HasColumnType("double");

                    b.Property<string>("remarks")
                        .HasColumnType("longtext");

                    b.Property<int>("testId")
                        .HasColumnType("int");

                    b.Property<int?>("transactionId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("workOrderId")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("tnx_OutsourceDetail");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_ReceiptDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .HasColumnType("longtext");

                    b.Property<double?>("NEFTamt")
                        .HasColumnType("double");

                    b.Property<int?>("bookingCentreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("cancelDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cancelReason")
                        .HasColumnType("longtext");

                    b.Property<string>("canceledBy")
                        .HasColumnType("longtext");

                    b.Property<double?>("cashAmt")
                        .HasColumnType("double");

                    b.Property<double?>("chequeAmt")
                        .HasColumnType("double");

                    b.Property<string>("chequeNo")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("collectionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("creditCardAmt")
                        .HasColumnType("double");

                    b.Property<string>("creditCardNo")
                        .HasColumnType("longtext");

                    b.Property<byte?>("isCancel")
                        .HasColumnType("tinyint unsigned");

                    b.Property<double?>("onlinewalletAmt")
                        .HasColumnType("double");

                    b.Property<short>("paymentModeId")
                        .HasColumnType("smallint");

                    b.Property<int?>("receiptNo")
                        .HasColumnType("int");

                    b.Property<double?>("receivedAmt")
                        .HasColumnType("double");

                    b.Property<string>("receivedBy")
                        .HasColumnType("longtext");

                    b.Property<int?>("receivedID")
                        .HasColumnType("int");

                    b.Property<int?>("settlementCentreID")
                        .HasColumnType("int");

                    b.Property<int?>("transactionId")
                        .HasColumnType("int");

                    b.Property<string>("transactionType")
                        .HasColumnType("longtext");

                    b.Property<string>("walletno")
                        .HasColumnType("longtext");

                    b.Property<string>("workOrderId")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("transactionId");

                    b.ToTable("tnx_ReceiptDetails");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_Sra", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("barcodeNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("batchNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("entryById")
                        .HasColumnType("int");

                    b.Property<DateTime>("entryDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("fromCentreId")
                        .HasColumnType("int");

                    b.Property<int>("investigationId")
                        .HasColumnType("int");

                    b.Property<double?>("invoiceAmount")
                        .HasColumnType("double");

                    b.Property<DateTime?>("invoiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("invoiceNo")
                        .HasColumnType("longtext");

                    b.Property<int?>("invoicecreatedID")
                        .HasColumnType("int");

                    b.Property<double?>("outsourceRate")
                        .HasColumnType("double");

                    b.Property<int?>("receivedBYId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("receivedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("remarks")
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("testId")
                        .HasColumnType("int");

                    b.Property<int>("toCentreId")
                        .HasColumnType("int");

                    b.Property<int>("transactionId")
                        .HasColumnType("int");

                    b.Property<int>("transferByID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("transferredOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("tnx_Sra");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_investigationtext_Report", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("createdbyId")
                        .HasColumnType("int");

                    b.Property<int>("testId")
                        .HasColumnType("int");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("tnx_investigationtext_Report");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_outhousedeatils", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SentName")
                        .HasColumnType("longtext");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.Property<double?>("bookingRate")
                        .HasColumnType("double");

                    b.Property<int?>("centreId")
                        .HasColumnType("int");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int?>("itemId")
                        .HasColumnType("int");

                    b.Property<string>("itemName")
                        .HasColumnType("longtext");

                    b.Property<int?>("outHosueLabID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("outHouseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("outHouseRate")
                        .HasColumnType("double");

                    b.Property<string>("outhouseLabName")
                        .HasColumnType("longtext");

                    b.Property<string>("remarks")
                        .HasColumnType("longtext");

                    b.Property<int?>("sentByid")
                        .HasColumnType("int");

                    b.Property<int?>("transactionId")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("workOrderId")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("tnx_outhousedeatils");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_testcomment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("createdById")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("isActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("testid")
                        .HasColumnType("int");

                    b.Property<int?>("updateById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("tnx_testcomment");
                });

            modelBuilder.Entity("iMARSARLIMS.Response_Model.ResultEntryResponseModle", b =>
                {
                    b.Property<int>("DLCCheck")
                        .HasColumnType("int");

                    b.Property<string>("Formula")
                        .HasColumnType("longtext");

                    b.Property<string>("Pname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ReportType")
                        .HasColumnType("int");

                    b.Property<string>("displayReading")
                        .HasColumnType("longtext");

                    b.Property<string>("flag")
                        .HasColumnType("longtext");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<int>("hold")
                        .HasColumnType("int");

                    b.Property<string>("investigationName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("isBold")
                        .HasColumnType("int");

                    b.Property<int?>("isCritical")
                        .HasColumnType("int");

                    b.Property<int>("isapproved")
                        .HasColumnType("int");

                    b.Property<int?>("labObservationId")
                        .HasColumnType("int");

                    b.Property<int?>("machineID")
                        .HasColumnType("int");

                    b.Property<string>("machineName")
                        .HasColumnType("longtext");

                    b.Property<string>("machineReading")
                        .HasColumnType("longtext");

                    b.Property<string>("maxCritical")
                        .HasColumnType("longtext");

                    b.Property<string>("maxVal")
                        .HasColumnType("longtext");

                    b.Property<string>("method")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("minCritical")
                        .HasColumnType("longtext");

                    b.Property<string>("minVal")
                        .HasColumnType("longtext");

                    b.Property<string>("observationName")
                        .HasColumnType("longtext");

                    b.Property<string>("oldreading")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("patientId")
                        .HasColumnType("int");

                    b.Property<int?>("printSeperate")
                        .HasColumnType("int");

                    b.Property<string>("readingFormat")
                        .HasColumnType("longtext");

                    b.Property<int?>("showInReport")
                        .HasColumnType("int");

                    b.Property<int?>("testId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("transactionId")
                        .HasColumnType("int");

                    b.Property<string>("unit")
                        .HasColumnType("longtext");

                    b.Property<string>("value")
                        .HasColumnType("longtext");

                    b.Property<string>("workOrderId")
                        .HasColumnType("longtext");

                    b.ToTable("ResultEntryResponseModle");
                });

            modelBuilder.Entity("iMARSARLIMS.Response_Model.SingleStringResponseModel", b =>
                {
                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.ToTable("SingleStringResponseModel");
                });

            modelBuilder.Entity("iMARSARLIMS.Response_Model.TatReportData", b =>
                {
                    b.Property<string>("ApproveDate")
                        .HasColumnType("longtext");

                    b.Property<int>("BTOA")
                        .HasColumnType("int");

                    b.Property<int>("BTOS")
                        .HasColumnType("int");

                    b.Property<string>("BookingDate")
                        .HasColumnType("longtext");

                    b.Property<string>("CentreCode")
                        .HasColumnType("longtext");

                    b.Property<int>("DTOR")
                        .HasColumnType("int");

                    b.Property<int>("DeliveryTime")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .HasColumnType("longtext");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("PatientName")
                        .HasColumnType("longtext");

                    b.Property<int>("RTOA")
                        .HasColumnType("int");

                    b.Property<string>("RefDoctor")
                        .HasColumnType("longtext");

                    b.Property<string>("ResultDate")
                        .HasColumnType("longtext");

                    b.Property<int>("STOD")
                        .HasColumnType("int");

                    b.Property<string>("SampleCollectionDate")
                        .HasColumnType("longtext");

                    b.Property<string>("SampleReceivedDate")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("TestName")
                        .HasColumnType("longtext");

                    b.Property<string>("WorkorderId")
                        .HasColumnType("longtext");

                    b.Property<int>("centreId")
                        .HasColumnType("int");

                    b.Property<string>("centreName")
                        .HasColumnType("longtext");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.ToTable("TatReportData");
                });

            modelBuilder.Entity("iMARSARLIMS.Response_Model.WorkSheetResposeModel", b =>
                {
                    b.Property<string>("Barcodeno")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<string>("InvestigationName")
                        .HasColumnType("longtext");

                    b.Property<string>("MachineReading")
                        .HasColumnType("longtext");

                    b.Property<string>("ObservationName")
                        .HasColumnType("longtext");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Pname")
                        .HasColumnType("longtext");

                    b.Property<int?>("ReportType")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.Property<string>("WorkOrderId")
                        .HasColumnType("longtext");

                    b.ToTable("WorkSheetResposeModel");
                });

            modelBuilder.Entity("iMARSARLIMS.Response_Model.rateListData", b =>
                {
                    b.Property<string>("itemCode")
                        .HasColumnType("longtext");

                    b.Property<int?>("itemid")
                        .HasColumnType("int");

                    b.Property<string>("itemname")
                        .HasColumnType("longtext");

                    b.Property<double?>("mrp")
                        .HasColumnType("double");

                    b.Property<double?>("rate")
                        .HasColumnType("double");

                    b.Property<int?>("rateTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ratetype")
                        .HasColumnType("longtext");

                    b.ToTable("rateListData");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Appointment.appointmentBooking", b =>
                {
                    b.HasOne("iMARSARLIMS.Model.Transaction.tnx_Booking", null)
                        .WithMany("addAppointment")
                        .HasForeignKey("transactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.chatGroupMasterEmployee", b =>
                {
                    b.HasOne("iMARSARLIMS.Model.Master.empMaster", null)
                        .WithMany("addChatGroupMasterEmployee")
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("iMARSARLIMS.Model.Master.chatGroupMaster", null)
                        .WithMany("addChatGroupMasterEmployee")
                        .HasForeignKey("groupMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.chatMessage", b =>
                {
                    b.HasOne("iMARSARLIMS.Model.Master.empMaster", "empMaster")
                        .WithMany("addChatchatMessage")
                        .HasForeignKey("empId");

                    b.HasOne("iMARSARLIMS.Model.Master.chatGroupMaster", "chatGroupMaster")
                        .WithMany("addChatMessage")
                        .HasForeignKey("groupMasterId");

                    b.Navigation("chatGroupMaster");

                    b.Navigation("empMaster");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.empCenterAccess", b =>
                {
                    b.HasOne("iMARSARLIMS.Model.Master.centreMaster", null)
                        .WithMany("addEmpCenterAccess")
                        .HasForeignKey("centreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("iMARSARLIMS.Model.Master.empMaster", null)
                        .WithMany("addEmpCentreAccess")
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.empDepartmentAccess", b =>
                {
                    b.HasOne("iMARSARLIMS.Model.Master.empMaster", null)
                        .WithMany("addEmpDepartmentAccess")
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.empRoleAccess", b =>
                {
                    b.HasOne("iMARSARLIMS.Model.Master.empMaster", null)
                        .WithMany("addEmpRoleAccess")
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.itemSampleTypeMapping", b =>
                {
                    b.HasOne("iMARSARLIMS.Model.Master.itemMaster", null)
                        .WithMany("AddSampletype")
                        .HasForeignKey("itemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Store.indentDetail", b =>
                {
                    b.HasOne("iMARSARLIMS.Model.Store.Indent", null)
                        .WithMany("addIndentDetail")
                        .HasForeignKey("indentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_Booking", b =>
                {
                    b.HasOne("iMARSARLIMS.Model.Transaction.tnx_BookingPatient", null)
                        .WithMany("addBooking")
                        .HasForeignKey("patientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_BookingItem", b =>
                {
                    b.HasOne("iMARSARLIMS.Model.Transaction.tnx_Booking", null)
                        .WithMany("addBookingItem")
                        .HasForeignKey("transactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_BookingStatus", b =>
                {
                    b.HasOne("iMARSARLIMS.Model.Transaction.tnx_Booking", null)
                        .WithMany("addBookingStatus")
                        .HasForeignKey("transactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_ReceiptDetails", b =>
                {
                    b.HasOne("iMARSARLIMS.Model.Transaction.tnx_Booking", null)
                        .WithMany("addpaymentdetail")
                        .HasForeignKey("transactionId");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.centreMaster", b =>
                {
                    b.Navigation("addEmpCenterAccess");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.chatGroupMaster", b =>
                {
                    b.Navigation("addChatGroupMasterEmployee");

                    b.Navigation("addChatMessage");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.empMaster", b =>
                {
                    b.Navigation("addChatGroupMasterEmployee");

                    b.Navigation("addChatchatMessage");

                    b.Navigation("addEmpCentreAccess");

                    b.Navigation("addEmpDepartmentAccess");

                    b.Navigation("addEmpRoleAccess");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Master.itemMaster", b =>
                {
                    b.Navigation("AddSampletype");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Store.Indent", b =>
                {
                    b.Navigation("addIndentDetail");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_Booking", b =>
                {
                    b.Navigation("addAppointment");

                    b.Navigation("addBookingItem");

                    b.Navigation("addBookingStatus");

                    b.Navigation("addpaymentdetail");
                });

            modelBuilder.Entity("iMARSARLIMS.Model.Transaction.tnx_BookingPatient", b =>
                {
                    b.Navigation("addBooking");
                });
#pragma warning restore 612, 618
        }
    }
}
